// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nummercial_finalProject.Data;

#nullable disable

namespace Nummercial_finalProject.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nummercial_finalProject.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGovermentsSerialized")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("LocalGovernments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("H")
                        .HasColumnType("float");

                    b.Property<double>("InitialValue")
                        .HasColumnType("float");

                    b.Property<double>("LastValue")
                        .HasColumnType("float");

                    b.Property<string>("NameFunction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("ResultId")
                        .HasColumnType("int");

                    b.Property<double>("Y0")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ResultId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.ProblemR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("H")
                        .HasColumnType("float");

                    b.Property<double>("InitialValue")
                        .HasColumnType("float");

                    b.Property<double>("LastValue")
                        .HasColumnType("float");

                    b.Property<int>("N")
                        .HasColumnType("int");

                    b.Property<string>("NameFunction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("ResultIdR")
                        .HasColumnType("int");

                    b.Property<double>("Y0")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ResultIdR");

                    b.ToTable("ProblemsR");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProblemId")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId")
                        .IsUnique()
                        .HasFilter("[ProblemId] IS NOT NULL");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.ResultR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProblemRId")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProblemRId")
                        .IsUnique()
                        .HasFilter("[ProblemRId] IS NOT NULL");

                    b.ToTable("ResultRs");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.Problem", b =>
                {
                    b.HasOne("Nummercial_finalProject.Models.Person", "Person")
                        .WithMany("Problems")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.ProblemR", b =>
                {
                    b.HasOne("Nummercial_finalProject.Models.Person", "Person")
                        .WithMany("ProblemsR")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.Result", b =>
                {
                    b.HasOne("Nummercial_finalProject.Models.Problem", "Problem")
                        .WithOne("Result")
                        .HasForeignKey("Nummercial_finalProject.Models.Result", "ProblemId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Problem");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.ResultR", b =>
                {
                    b.HasOne("Nummercial_finalProject.Models.ProblemR", "ProblemR")
                        .WithOne("ResultR")
                        .HasForeignKey("Nummercial_finalProject.Models.ResultR", "ProblemRId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ProblemR");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.Person", b =>
                {
                    b.Navigation("Problems");

                    b.Navigation("ProblemsR");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.Problem", b =>
                {
                    b.Navigation("Result");
                });

            modelBuilder.Entity("Nummercial_finalProject.Models.ProblemR", b =>
                {
                    b.Navigation("ResultR");
                });
#pragma warning restore 612, 618
        }
    }
}
